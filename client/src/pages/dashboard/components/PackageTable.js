import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from 'react';
import { PencilIcon, PlusIcon } from 'lucide-react';
import { getStatusBadge } from '@/utils/statusUtils';
import { formatTimestamp } from '@/utils/dateUtils';
import PackageStatusModal from '@/pages/dashboard/components/modal/PackageStatusModal';
import CreatePackageModal from '@/pages/dashboard/components/modal/CreatePackageModal';
export const statusList = ['ALL', 'WAITING', 'PICKED', 'HANDED_OVER', 'EXPIRED'];
const PackageRow = ({ pkg, handleUpdateStatus, }) => {
    const badge = getStatusBadge(pkg.status);
    const [isOpen, setIsOpen] = useState(false);
    const isExpired = pkg.status.toUpperCase() === 'EXPIRED';
    return (_jsxs(_Fragment, { children: [_jsxs("tr", { className: "transition-all hover:bg-[var(--muted)] bg-[var(--card)]", children: [_jsx("td", { className: "px-4 py-2", children: pkg.package_id }), _jsx("td", { className: "px-4 py-2", children: pkg.order_ref }), _jsx("td", { className: "px-4 py-2", children: pkg.driver }), _jsx("td", { className: "px-4 py-2", children: _jsxs("span", { className: "inline-flex items-center px-3 py-1 rounded-full font-semibold text-xs sm:text-sm", style: { backgroundColor: badge.color || 'var(--muted)' }, children: [badge.icon, " ", pkg.status.replace('_', ' ')] }) }), _jsx("td", { className: "px-4 py-2", children: pkg.created_by }), _jsx("td", { className: "px-4 py-2", children: formatTimestamp(pkg.created_at) }), _jsx("td", { className: "px-4 py-2", children: isExpired ? (_jsx("span", { className: "inline-block px-3 py-1 rounded-md text-sm font-medium bg-red-100 text-red-700", children: "Already Expired" })) : pkg.status === 'HANDED_OVER' ? (_jsx("span", { className: "inline-block px-3 py-1 rounded-md text-sm font-medium bg-green-100 text-green-700", children: "Completed" })) : (_jsxs("button", { onClick: () => setIsOpen(true), className: "flex items-center gap-1 px-3 py-1 rounded-md font-medium text-sm transition-all duration-200 border border-gray-500 text-gray-700 hover:bg-gray-100 hover:shadow-md cursor-pointer", children: [_jsx(PencilIcon, { className: "w-4 h-4" }), " Update"] })) })] }), _jsx(PackageStatusModal, { pkg: pkg, isOpen: isOpen, onClose: () => setIsOpen(false), onSave: handleUpdateStatus })] }));
};
export default function PackageTable({ packages, handleUpdateStatus, handleCreatePackage }) {
    const [isCreateOpen, setIsCreateOpen] = useState(false);
    const columns = ['Package ID', 'Order Ref', 'Driver', 'Status', 'Created By', 'Created At', 'Action'];
    return (_jsxs("div", { className: "w-full mb-6", children: [_jsx("div", { className: "flex justify-end mb-3", children: _jsxs("button", { onClick: () => setIsCreateOpen(true), className: "flex items-center gap-2 px-5 py-2 rounded-md font-semibold text-base transition-all duration-200 hover:bg-[var(--primary-dark)] hover:shadow-md cursor-pointer mb-2", style: { backgroundColor: 'var(--primary)', color: 'var(--primary-foreground)' }, children: [_jsx(PlusIcon, { className: "w-5 h-5" }), " Create"] }) }), _jsx("div", { className: "hidden md:block overflow-x-auto rounded-lg shadow", children: _jsxs("table", { className: "min-w-[700px] w-full table-auto border-collapse", children: [_jsx("thead", { className: "bg-[var(--muted)]", children: _jsx("tr", { className: "sticky top-0 z-10", children: columns.map(head => (_jsx("th", { className: "text-left font-semibold text-sm sm:text-base px-4 py-2 border-b", style: { color: 'var(--muted-foreground)' }, children: head }, head))) }) }), _jsx("tbody", { children: packages.length > 0 ? (packages.map(pkg => (_jsx(PackageRow, { pkg: pkg, handleUpdateStatus: handleUpdateStatus }, pkg.id)))) : (_jsx("tr", { children: _jsx("td", { colSpan: 7, className: "text-center py-8 text-sm sm:text-base", style: { color: 'var(--muted-foreground)' }, children: "No packages found for this status." }) })) })] }) }), _jsx(CreatePackageModal, { isOpen: isCreateOpen, onClose: () => setIsCreateOpen(false), onCreate: handleCreatePackage })] }));
}
